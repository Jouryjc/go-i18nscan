name: Publish to NPM

# 触发条件：推送到master分支
on:
  push:
    branches:
      - master
  # 也支持手动触发
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # 设置Node.js环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      # 设置Go环境（项目需要Go进行AST解析）
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      # 安装依赖
      - name: Install dependencies
        run: npm ci
      
      # 运行CI测试
      - name: Run CI tests
        run: npm run test:ci
      
      # 检查版本是否已更新
      - name: Check version
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # 检查这个版本是否已经发布
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          if npm view $PACKAGE_NAME@$CURRENT_VERSION version 2>/dev/null; then
            echo "Version $CURRENT_VERSION already exists on NPM"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT_VERSION is new, will publish"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi
      
      # 构建项目（如果需要）
      - name: Build project
        if: steps.version.outputs.should_publish == 'true'
        run: |
          # 确保所有必要文件都存在
          echo "Building project..."
          # 如果有构建步骤，在这里添加
      
      # 发布到NPM
      - name: Publish to NPM
        if: steps.version.outputs.should_publish == 'true'
        run: |
          # 设置NPM认证
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      # 创建GitHub Release
      - name: Create GitHub Release
        if: steps.version.outputs.should_publish == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.current_version }}
          release_name: Release v${{ steps.version.outputs.current_version }}
          body: |
            ## 版本 ${{ steps.version.outputs.current_version }}
            
            ### 更新内容
            - 自动发布版本
            
            ### 安装方式
            ```bash
            npm install -g go-i18nscan@${{ steps.version.outputs.current_version }}
            ```
          draft: false
          prerelease: false
      
      # 通知发布结果
      - name: Notify success
        if: steps.version.outputs.should_publish == 'true'
        run: |
          echo "✅ Successfully published go-i18nscan@${{ steps.version.outputs.current_version }} to NPM"
          echo "📦 Package URL: https://www.npmjs.com/package/go-i18nscan"
      
      - name: Notify skip
        if: steps.version.outputs.should_publish == 'false'
        run: |
          echo "⏭️ Skipped publishing - version ${{ steps.version.outputs.current_version }} already exists"